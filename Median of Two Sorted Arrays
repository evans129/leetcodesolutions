class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        vector<double>merge;
        int i=0,j=0;
        while(i<nums1.size()&&j<nums2.size())
        {
        if(nums1[i]<=nums2[j])
        {
        merge.push_back(nums1[i]);
        i++;
        }
            else if(nums1[i]>nums2[j])
            {
            merge.push_back(nums2[j]);
                j++;
            }
        }
        while(i<nums1.size())
        {
        merge.push_back(nums1[i]);
        i++;
        }
        while(j<nums2.size())
        {
        merge.push_back(nums2[j]);
        j++;
        }
      if(merge.size()%2!=0)
          return merge[(merge.size()-1)/2];
        else
        return (merge[(merge.size()-2)/2]+merge[merge.size()/2])/2;
    }
};
